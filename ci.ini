# SW component/modules dependencies
# buildKind=build|test, test targets always run
# build_commands - list of build commands to execute in a sequence 
# buidType, buildscript, sourcePath target_arch must be expanded in build_commands 
# if sourcePath has multiple strings seperated by SPACE build commands must be repeated for each string
# parent - is prerequisite 
# platforms  - module has to be built on linux and windows if specified 
# aritifacts_patterns - files patterns to store into EC repo once build is succesful
# WARINIG: Semicolons in variables MUST be escaped with backslash !!! This is what make 3.82 wants!!!
# Line can be continued in the standard C/Make way by using the backslash character at the end

#uildType=relwithdebinfo Case is VERY imortant

[apl]
platforms=windows linux

[compiler]
buildKind=build
queue=ec_smoke
buildType=relwithdebinfo
buildscript=build.sh
platforms=windows linux
target_arch=x86
sourcePath=sw/compiler/llvm/llvm-3.6
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath : \
    build_all_target_paths= $buildscript -b $buildType -a $target_arch -t $sourcePath
artifacts_patterns=_out/$platforms-$target_arch/**/*.a;_out/$platforms-$target_arch/**/c*;_out/$platforms-$target_arch/**/*.lib;_build/$platforms-$target_arch/**/*.def;_build/$platforms-$target_arch/**/*.inc;_build/$platforms-$target_arch/**/*.h;_out/$platforms-$target_arch/**/clog*;_out/$platforms-$target_arch/**/clog.*

[driver]
buildKind=build
queue=ec_smoke
buildType=relwithdebinfo
buildscript=build.sh
platforms=windows linux
target_arch=x86
sourcePath=sw/driver sw/asm
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath :\
 build_all_target_paths= $buildscript -b $buildType -a $target_arch -t $sourcePath 
artifacts_patterns=_out/$platforms-$target_arch/**/*.so;_out/$platforms-$target_arch/**/*.a;_out/$platforms-$target_arch/**/c*;_out/$platforms-$target_arch/**/*.lib;_out/$platforms-$target_arch/**/*.dll;_build/$platforms-$target_arch/**/*.h;_build/$platforms-$target_arch/**/*.def;_build/$platforms-$target_arch/**/*.inc;_out/$platforms-$target_arch/**/clog*;_out/$platforms-$target_arch/**/clog.*
parent=compiler

[fs]
buildKind=build
queue=ec_smoke
buildType=relwithdebinfo 
buildscript=build.sh
platforms=linux windows
target_arch=x86
sourcePath=hw/fs
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath :\
 build_all_target_paths = $buildscript -b $buildType -a $target_arch -t $sourcePath 
artifacts_patterns=_out/$platforms-$target_arch/**/*.so;_out/$platforms-$target_arch/**/*.dll;_out/$platforms-$target_arch/**/fs*;_out/$platforms-$target_arch/**/*.lib;_build/$platforms-$target_arch/**/*.inc;_build/$platforms-$target_arch/**/*.h;_build/$platforms-$target_arch/**/*.def;_out/$platforms-$target_arch/**/*.a;_out/$platforms-$target_arch/**/clog*;_out/$platforms-$target_arch/**/clog.*
parent=driver

[ocl]
buildKind=build
queue=ec_smoke
buildType=relwithdebinfo 
buildscript=build.sh
platforms=linux  windows
target_arch=x86
sourcePath=sw/driver/ocl
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath :\
 build_all_target_paths = $buildscript -b $buildType -a $target_arch -t $sourcePath 
artifacts_patterns=_out/$platforms-$target_arch/**/*.so;_out/$platforms-$target_arch/**/*.so.*;_out/$platforms-$target_arch/**/*.dll;_out/$platforms-$target_arch/**/*.a;_out/$platforms-$target_arch/**/*.lib;_out/$platforms-$target_arch/**/clog*;_out/$platforms-$target_arch/**/clog.*
parent=compiler driver fs

[ets]
queue=ec_smoke
buildKind=build
buildType=relwithdebinfo 
buildscript=sw/ets/test.sh
platforms=linux 
target_arch=x86
sourcePath=sw/ets
build_commands=build_target_paths = $buildscript  $target_arch $buildType 
artifacts_patterns=sw/ets/**/ets-main;_out/$platforms-$target_arch/**/clog*;_out/$platforms-$target_arch/**/clog.*
parent=compiler driver

[castor]
buildKind=build
buildType=relwithdebinfo release
buildscript=build.sh
queue=ec_smoke
platforms=linux
target_arch=x64
#target_arch=x86
sourcePath=hw/tools/castor
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath :\
 build_target_paths = $buildscript -b $buildType -a $target_arch -t $sourcePath 
artifacts_patterns=_out/$platforms-$target_arch/**/*.so;_out/$platforms-$target_arch/**/*.so.*;_out/$platforms-$target_arch/**/castor

[apitrace]
buildKind=build
queue=ec_smoke
buildType=relwithdebinfo 
buildscript=build.sh
platforms=linux windows
target_arch=x86
sourcePath=sw/apitrace
build_commands=cmake_target_paths = $buildscript -g -b $buildType -a $target_arch -t $sourcePath :\
 build_all_target_paths= $buildscript -b $buildType -a $target_arch -t $sourcePath 
artifacts_patterns=_out/$platforms-$target_arch/**/eglretrace*

[rtl_build_svport]
platform=linux
buildKind=rtl
dut=gpu
scriptpath=hw/common/scripts/
datapath=hw/impl/tools/build_regression/
buildcommand=rtl_build_svport.sh

[rtl_build]
platform=linux
buildKind=rtl
dut=gpu
scriptpath=hw/common/scripts/
datapath=hw/impl/tools/build_regression/
buildcommand=rtl_build.sh

[dvm]
platforms=linux
target_arch=x64
#target_arch=x86
buildKind=build
buildType=relwithdebinfo
buildscript=dvm_build.sh
sourcePath=hw/models/dvm
scriptpath=hw/common/scripts
artifacts_patterns=_out/$platforms-$target_arch/relwithdebinfo/**/*;_out/$platforms-$target_arch/release/**/*;hw/models/dvm/gen/**/*
build_commands=\
 dvm_build_tb = $scriptpath/dvm_build_tb.sh dvm `pwd`/$sourcePath `pwd`/$scriptpath\
 $(if $(COMMANDER_SERVER),"$$[/myJob/jobName]", "JOBNAME") \
 "EC" \
 "smoke" \
 :\
 cmake_target_paths = hw/common/scripts/$buildscript dvm `pwd`/$sourcePath `pwd`/$scriptpath $(if $(COMMANDER_SERVER),"$$[/myJob/jobName]", "JOBNAME") "EC" "smoke":\
 run_test=$scriptpath/dvm_run.sh \
 dvm\
 `pwd`/$sourcePath\
 `pwd`/$scriptpath \
 NULL \
 $(if $(COMMANDER_SERVER),"$$[/myJob/jobName]", "JOBNAME") \
 "EC" \
 "smoke" 

[tb_build]
buildKind=rtl
platforms=linux
target_arch=x64
#target_arch=x86
buildType=relwithdebinfo 
dut=gpu acem
scriptpath=hw/common/scripts/
datapath=hw/dv/func/
buildcommand=tb_build.sh
parent=dvm

[vcs_build]
buildKind=rtl
platforms=linux
target_arch=x64
#target_arch=x86
buildType=relwithdebinfo 
dut=gps bin spc ccv crop sicp tex peq tex_ta lsu wsq pe_top gpu-noc tex_tc tex_vuvc rcu tex_td tex_tf tex_tuvc tex_vaag ws gps-noc noc ipa so comp l1cl2c dcom su tb dmac gsm rasz
scriptpath=hw/common/scripts
datapath=hw/dv/func
buildcommand=vcs_build.sh
testcommand=vcs_runtests.sh
tests=$(DUT)_smoke.testlist
parent=dvm

[gfxbench30]
buildKind=test
platforms=linux windows
target_arch=x86
buildType=relwithdebinfo 
test=\
  Manhattan.Frame131_480x270_ti\
  Manhattan.Frame131 \
  Manhattan.Frame383 \
  Manhattan.Frame556 \
  Manhattan.Frame565 \
  Manhattan.Frame131_480x270_base_braiding_cset_quadmerge \
  Manhattan.Frame131_480x270_zpp_ti \
  Manhattan.Frame131_480x270_cset \
  Manhattan.Frame131_480x270_braiding \
  Manhattan.Frame131_480x270_base \
  Manhattan.Frame131_480x270_quadmerge \
  Manhattan.Frame181_480x270_cset_ti_zpp
testcommand=sw/common/scripts/run_test.py  --buildType $buildType --arch $target_arch --app gfxbench30 --testName $test
parent=compiler driver fs apitrace ets ocl

[PPA]
buildType=relwithdebinfo 
platforms=linux
target_arch=x86
buildKind=test
test=ppa2
testcommand=hw/models/lws/scripts/ppa_smoke.sh
parent=compiler driver fs apitrace castor ets dvm ocl

[eglretrace]
buildKind=test
buildType=relwithdebinfo 
platforms=linux windows
target_arch=x86
test=GLB25.f6316\
	GLB25.f0939\
	GLB25.f2879\
	GLB27.f0017S-trim\
	GLB27.f0142S-trim\
	GLB27.f0512S-trim
testcommand=sw/common/scripts/run_test.py  --buildType $buildType --arch $target_arch --app eglretrace --testName $test 
parent=compiler driver fs apitrace ets ocl

[cbcl12-mobile]
buildKind=test
buildType=relwithdebinfo 
platforms=linux windows
target_arch=x86
test=\
  cl_fractal_juliaset \
  cl_histogram_buff \
  cl_gauss_buff \
  cl_fluid_4k \
  cl_fluid_32k \
  cl_raytrace_ambocc 
testcommand=sw/common/scripts/run_test.py  --buildType $buildType --arch $target_arch --app cbcl12-mobile --testName $test 
parent=compiler driver fs apitrace castor ets ocl

[compiler_test]
buildKind=test
buildType=relwithdebinfo 
platforms=linux windows
target_arch=x86
test=\
    vert-0.glsl_frag-0.glsl\
    vert-107.glsl_frag-107.glsl\
    atomic-0.comp\
    atomic-1.comp
testcommand=sw/common/scripts/run_test.py  --buildType $buildType --arch $target_arch --app compiler --testName $test 
parent=compiler driver fs apitrace ets ocl
